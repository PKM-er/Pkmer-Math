import{_ as l,c as i,b as a,a as t,d as e,w as m,e as n,r,o}from"./app-DjVwfCP4.js";const c={};function h(g,s){const p=r("RouteLink");return o(),i("div",null,[s[9]||(s[9]=a('<h2 id="简介" tabindex="-1">简介</h2><p>泰勒公式用一个n次多项式来近似在某点具有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>阶导数的函数。其核心思想是局部的“以直代曲”：利用函数在展开点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 处的各阶导数值，来构建一个能够在该点附近高度“贴合”原函数的多项式。<br> 尽管展开后的多项式形式有时也相当复杂，但它成功地将复杂的函数性质转化为了更易于代数处理的多项式形式。</p><h2 id="定义" tabindex="-1">定义</h2><p>泰勒公式通常以两种形式出现：带余项的有限展开式（泰勒多项式）和无穷级数形式（泰勒级数）。</p>',4)),t("p",null,[e(p,{to:"/微积分/微分/公式-泰勒公式.html"},{default:m(()=>[...s[0]||(s[0]=[n("公式-泰勒公式",-1)])]),_:1})]),s[10]||(s[10]=a('<h2 id="性质" tabindex="-1">性质</h2><h3 id="收敛性与局限性" tabindex="-1">收敛性与局限性</h3><p>泰勒公式的展开点并非完全任意。尽管理论上可以在函数可导的任意点展开，但不同的展开点会直接影响级数的收敛性、收敛速度和精度。</p><p>两种特殊情况：</p><ul><li><strong>奇点附近</strong>：如果函数在某一点附近有奇点（导数不存在或为无穷大），那么以该点或奇点附近的点为展开点，可能导致泰勒级数不收敛，或收敛速度极慢。</li><li><strong>非解析函数</strong>：对于某些函数（如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">f(x) = e^{-1/x^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9869em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1/</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 处），它们在某点拥有无穷阶导数，但其泰勒级数在该点附近并不收敛于函数本身。这类函数被称为非解析函数，无法通过泰勒展开进行有效的局部近似。</li></ul><h3 id="余项" tabindex="-1">余项</h3>',6)),t("p",null,[s[2]||(s[2]=a('这里必须强调它是有限的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>次多项式和余项<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_n(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>之和。余项量化了近似的误差。<br>',6)),e(p,{to:"/微积分/微分/余项.html"},{default:m(()=>[...s[1]||(s[1]=[n("余项",-1)])]),_:1}),s[3]||(s[3]=n(" 里简单介绍了常见的余项形式，如",-1)),s[4]||(s[4]=t("strong",null,"拉格朗日余项",-1)),s[5]||(s[5]=n("和",-1)),s[6]||(s[6]=t("strong",null,"佩亚诺余项",-1))]),s[11]||(s[11]=a('<h2 id="计算" tabindex="-1">计算</h2><h3 id="展开点选取原则" tabindex="-1">展开点选取原则</h3><p>泰勒公式的有效性与展开点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的选择密切相关。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的选取不是固定的，但是当从低阶导数开始累加展开时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 点的附近最先与原函数的值接近。<br> 如果选取的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 离所求的点或区间过远，则可能需要很高阶展开才能与原函数贴近。因此，在展开阶数固定的情况下，明智地选取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有助于显著提高近似程度。</p><h2 id="推广" tabindex="-1">推广</h2><h3 id="麦克劳林公式" tabindex="-1">麦克劳林公式</h3>',5)),t("p",null,[e(p,{to:"/微积分/微分/麦克劳林公式.html"},{default:m(()=>[...s[7]||(s[7]=[n("麦克劳林公式",-1)])]),_:1}),s[8]||(s[8]=a(' 是泰勒公式在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x_0 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 处的特例。选择零点展开的主要优势是<strong>便于参与多项式化简</strong>。然而，这种便利性并非没有代价：对于某些函数，若想在远离原点的区间达到相同的近似精度，麦克劳林公式可能需要比其他泰勒展开式更多的项，增加了计算量，在某些情况下甚至无法收敛到原函数值。',5))])])}const x=l(c,[["render",h]]),u=JSON.parse('{"path":"/%E5%BE%AE%E7%A7%AF%E5%88%86/%E5%BE%AE%E5%88%86/%E6%B3%B0%E5%8B%92%E5%85%AC%E5%BC%8F.html","title":"泰勒公式","lang":"zh-CN","frontmatter":{"tags":["数学","公式"],"dlink":["[[---微分---]]"],"author":["Cyletix","Gemini"],"datetime":"2025-08-26T00:00:00.000Z","chapter":-3,"description":"简介 泰勒公式用一个n次多项式来近似在某点具有n阶导数的函数。其核心思想是局部的“以直代曲”：利用函数在展开点 x0​ 处的各阶导数值，来构建一个能够在该点附近高度“贴合”原函数的多项式。 尽管展开后的多项式形式有时也相当复杂，但它成功地将复杂的函数性质转化为了更易于代数处理的多项式形式。 定义 泰勒公式通常以两种形式出现：带余项的有限展开式（泰勒多项...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-20T10:27:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cyletix\\"},{\\"@type\\":\\"Person\\",\\"name\\":\\"Gemini\\"}]}"],["meta",{"property":"og:url","content":"https://PKM-er.github.io/Pkmer-Math/%E5%BE%AE%E7%A7%AF%E5%88%86/%E5%BE%AE%E5%88%86/%E6%B3%B0%E5%8B%92%E5%85%AC%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Pkmer-Math"}],["meta",{"property":"og:description","content":"简介 泰勒公式用一个n次多项式来近似在某点具有n阶导数的函数。其核心思想是局部的“以直代曲”：利用函数在展开点 x0​ 处的各阶导数值，来构建一个能够在该点附近高度“贴合”原函数的多项式。 尽管展开后的多项式形式有时也相当复杂，但它成功地将复杂的函数性质转化为了更易于代数处理的多项式形式。 定义 泰勒公式通常以两种形式出现：带余项的有限展开式（泰勒多项..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-20T10:27:46.000Z"}],["meta",{"property":"article:author","content":"Cyletix"}],["meta",{"property":"article:tag","content":"公式"}],["meta",{"property":"article:tag","content":"数学"}],["meta",{"property":"article:modified_time","content":"2025-10-20T10:27:46.000Z"}]],"tag":["数学","公式"]},"git":{"createdTime":1760956066000,"updatedTime":1760956066000,"contributors":[{"name":"Cyletix","username":"Cyletix","email":"1016120209@qq.com","commits":1,"url":"https://github.com/Cyletix"}]},"readingTime":{"minutes":2.44,"words":732},"filePathRelative":"微积分/微分/泰勒公式.md","excerpt":"<h2>简介</h2>\\n<p>泰勒公式用一个n次多项式来近似在某点具有<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\"application/x-tex\\">n</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\">n</span></span></span></span>阶导数的函数。其核心思想是局部的“以直代曲”：利用函数在展开点 <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding=\\"application/x-tex\\">x_0</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.5806em;vertical-align:-0.15em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\">x</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3011em;\\"><span style=\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\">0</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span></span></span></span> 处的各阶导数值，来构建一个能够在该点附近高度“贴合”原函数的多项式。<br>\\n尽管展开后的多项式形式有时也相当复杂，但它成功地将复杂的函数性质转化为了更易于代数处理的多项式形式。</p>","autoDesc":true,"bioChainData":{"outlink":[{"title":"公式-泰勒公式","link":"微积分/微分/公式-泰勒公式.html"},{"title":"余项","link":"微积分/微分/余项.html"},{"title":"麦克劳林公式","link":"微积分/微分/麦克劳林公式.html"}],"backlink":[{"title":"二元泰勒公式","link":"微积分/多元函数微分/二元泰勒公式.html"},{"title":"---微分---","link":"微积分/微分/---微分---.html"},{"title":"麦克劳林公式","link":"微积分/微分/麦克劳林公式.html"},{"title":"无穷小的比较","link":"微积分/极限/无穷小的比较.html"},{"title":"泰勒级数","link":"微积分/级数/泰勒级数.html"}],"localMap":{"nodes":[{"id":"微积分/微分/泰勒公式.md","value":{"title":"泰勒公式","path":"微积分/微分/泰勒公式.md","outlink":["微积分/微分/公式-泰勒公式.md","微积分/微分/余项.md","微积分/微分/麦克劳林公式.md"],"backlink":["微积分/多元函数微分/二元泰勒公式.md","微积分/微分/---微分---.md","微积分/微分/麦克劳林公式.md","微积分/极限/无穷小的比较.md","微积分/级数/泰勒级数.md"]}},{"id":"微积分/微分/公式-泰勒公式.md","value":{"title":"公式-泰勒公式","path":"微积分/微分/公式-泰勒公式.md","outlink":[],"backlink":[]}},{"id":"微积分/微分/余项.md","value":{"title":"余项","path":"微积分/微分/余项.md","outlink":[],"backlink":[]}},{"id":"微积分/微分/麦克劳林公式.md","value":{"title":"麦克劳林公式","path":"微积分/微分/麦克劳林公式.md","outlink":[],"backlink":[]}},{"id":"微积分/多元函数微分/二元泰勒公式.md","value":{"title":"二元泰勒公式","path":"微积分/多元函数微分/二元泰勒公式.md","outlink":[],"backlink":[]}},{"id":"微积分/微分/---微分---.md","value":{"title":"---微分---","path":"微积分/微分/---微分---.md","outlink":[],"backlink":[]}},{"id":"微积分/极限/无穷小的比较.md","value":{"title":"无穷小的比较","path":"微积分/极限/无穷小的比较.md","outlink":[],"backlink":[]}},{"id":"微积分/级数/泰勒级数.md","value":{"title":"泰勒级数","path":"微积分/级数/泰勒级数.md","outlink":[],"backlink":[]}}],"links":[{"source":"微积分/微分/泰勒公式.md","target":"微积分/微分/公式-泰勒公式.md"},{"source":"微积分/微分/泰勒公式.md","target":"微积分/微分/余项.md"},{"source":"微积分/微分/泰勒公式.md","target":"微积分/微分/麦克劳林公式.md"},{"source":"微积分/多元函数微分/二元泰勒公式.md","target":"微积分/微分/泰勒公式.md"},{"source":"微积分/微分/---微分---.md","target":"微积分/微分/泰勒公式.md"},{"source":"微积分/微分/麦克劳林公式.md","target":"微积分/微分/泰勒公式.md"},{"source":"微积分/极限/无穷小的比较.md","target":"微积分/微分/泰勒公式.md"},{"source":"微积分/级数/泰勒级数.md","target":"微积分/微分/泰勒公式.md"}]}}}');export{x as comp,u as data};
